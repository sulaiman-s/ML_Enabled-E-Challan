{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport AppButton from \"../compnents/AppButton\";\nimport UserListItem from \"../compnents/UserListItem\";\nimport Label from \"../compnents/label\";\nimport Screen from \"../compnents/Screen\";\n\nfunction UploadChallan(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      url = _useState2[0],\n      setUrl = _useState2[1];\n\n  var handleUpload = function handleUpload() {\n    var result;\n    return _regeneratorRuntime.async(function handleUpload$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 2:\n            result = _context.sent;\n            setUrl(result.uri);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Screen, null, React.createElement(View, {\n    style: {\n      width: \"100%\"\n    }\n  }, React.createElement(View, null, React.createElement(Label, {\n    value: \"Challan Info\",\n    style: {\n      color: \"tomato\",\n      marginTop: \"5%\",\n      elevation: 0\n    }\n  })), React.createElement(ScrollView, null, React.createElement(View, {\n    style: {\n      marginTop: 10\n    }\n  }, route.params == null ? React.createElement(UserListItem, null) : React.createElement(UserListItem, {\n    ch_Number: route.params.ch_Number,\n    date: route.params.date,\n    type: route.params.type,\n    price: route.params.price,\n    number: route.params.number\n  })), React.createElement(Label, {\n    value: \"Upload Receipt of Above Challan\",\n    style: {\n      color: \"tomato\",\n      marginTop: \"5%\",\n      elevation: 0\n    }\n  }), React.createElement(TouchableNativeFeedback, {\n    onPress: handleUpload\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"lightslategray\",\n      height: 170,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: 10\n    }\n  }, url == null ? React.createElement(React.Fragment, null, React.createElement(MaterialCommunityIcons, {\n    name: \"camera\",\n    size: 100,\n    color: \"white\"\n  }), React.createElement(Text, null, \" Select Image From Library \")) : React.createElement(Image, {\n    source: {\n      uri: url\n    },\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    }\n  }))), React.createElement(AppButton, {\n    title: \"Upload\",\n    textStyle: styles.btn_t,\n    height: 50,\n    width: \"100%\",\n    style: styles.btn\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  btn: {\n    backgroundColor: \"#4ecdc4\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 5,\n    marginTop: \"5%\"\n  },\n  btn_t: {\n    color: \"black\"\n  },\n  txt: {\n    fontSize: 15,\n    fontFamily: \"Roboto\",\n    height: 50,\n    width: \"100%\",\n    paddingTop: 15,\n    paddingLeft: 15,\n    backgroundColor: \"#4ecdc4\",\n    color: \"white\"\n  }\n});\nexport default UploadChallan;","map":{"version":3,"sources":["C:/Users/Sulaiman/OneDrive/Desktop/FYP/aut_Veh_num_det/Auto_Veh_front_end/app/UserScreenComponents/UploadChallan.js"],"names":["React","useState","ImagePicker","MaterialCommunityIcons","AppButton","UserListItem","Label","Screen","UploadChallan","route","url","setUrl","handleUpload","launchImageLibraryAsync","result","uri","width","color","marginTop","elevation","params","ch_Number","date","type","price","number","backgroundColor","height","justifyContent","alignItems","styles","btn_t","btn","StyleSheet","create","borderRadius","txt","fontSize","fontFamily","paddingTop","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  Image,\r\n  TouchableNativeFeedback,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport AppButton from \"../compnents/AppButton\";\r\nimport UserListItem from \"../compnents/UserListItem\";\r\nimport Label from \"../compnents/label\";\r\nimport Screen from \"../compnents/Screen\";\r\n\r\nfunction UploadChallan({ route }) {\r\n  const [url, setUrl] = useState();\r\n  const handleUpload = async () => {\r\n    const result = await ImagePicker.launchImageLibraryAsync();\r\n    setUrl(result.uri);\r\n  };\r\n  return (\r\n    <Screen>\r\n      <View style={{ width: \"100%\" }}>\r\n        <View>\r\n          <Label\r\n            value=\"Challan Info\"\r\n            style={{\r\n              // backgroundColor: \"#4ecdc4\",\r\n              color: \"tomato\",\r\n              marginTop: \"5%\",\r\n              elevation: 0,\r\n            }}\r\n          />\r\n        </View>\r\n        <ScrollView>\r\n          <View style={{ marginTop: 10 }}>\r\n            {route.params == null ? (\r\n              <UserListItem />\r\n            ) : (\r\n              <UserListItem\r\n                ch_Number={route.params.ch_Number}\r\n                date={route.params.date}\r\n                type={route.params.type}\r\n                price={route.params.price}\r\n                number={route.params.number}\r\n              />\r\n            )}\r\n          </View>\r\n          <Label\r\n            value=\"Upload Receipt of Above Challan\"\r\n            style={{\r\n              // backgroundColor: \"#4ecdc4\",\r\n              color: \"tomato\",\r\n              marginTop: \"5%\",\r\n              elevation: 0,\r\n            }}\r\n          />\r\n          <TouchableNativeFeedback onPress={handleUpload}>\r\n            <View\r\n              style={{\r\n                backgroundColor: \"lightslategray\",\r\n                height: 170,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: 10,\r\n              }}\r\n            >\r\n              {url == null ? (\r\n                <>\r\n                  <MaterialCommunityIcons\r\n                    name=\"camera\"\r\n                    size={100}\r\n                    color=\"white\"\r\n                  />\r\n                  <Text> Select Image From Library </Text>\r\n                </>\r\n              ) : (\r\n                <Image\r\n                  source={{ uri: url }}\r\n                  style={{ height: \"100%\", width: \"100%\" }}\r\n                />\r\n              )}\r\n            </View>\r\n          </TouchableNativeFeedback>\r\n          <AppButton\r\n            title=\"Upload\"\r\n            textStyle={styles.btn_t}\r\n            height={50}\r\n            width={\"100%\"}\r\n            style={styles.btn}\r\n          />\r\n        </ScrollView>\r\n      </View>\r\n    </Screen>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  //color pallet\r\n  // primary: \"#fc5c65\",\r\n  // secondary: \"#4ecdc4\",\r\n  // black: \"#000\",\r\n  // white: \"#fff\",\r\n  // medium: \"#6e6969\",\r\n  // light: \"#f8f4f4\",\r\n  // dark: \"#0c0c0c\",\r\n  // danger: \"#ff5252\",\r\n  btn: {\r\n    backgroundColor: \"#4ecdc4\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 5,\r\n    marginTop: \"5%\",\r\n  },\r\n  btn_t: {\r\n    color: \"black\",\r\n  },\r\n  txt: {\r\n    fontSize: 15,\r\n    fontFamily: \"Roboto\",\r\n    height: 50,\r\n    width: \"100%\",\r\n    paddingTop: 15,\r\n    paddingLeft: 15,\r\n    backgroundColor: \"#4ecdc4\",\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nexport default UploadChallan;\r\n"]},"metadata":{},"sourceType":"module"}