{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppInput from \"../compnents/AppInput\";\nimport Screen from \"../compnents/Screen\";\nimport AppButton from \"../compnents/AppButton\";\nimport AuthContext from \"../Auth/Context\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport Url from \"../Auth/ApiUrlEndpoints\";\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var authContext = useContext(AuthContext);\n\n  var handleLogin = function handleLogin() {\n    var _await$axios$post$cat, data, dat;\n\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(Url + \"/user/create/\", {\n              username: username,\n              password: password\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 2:\n            _await$axios$post$cat = _context.sent;\n            data = _await$axios$post$cat.data;\n\n            if (data.refresh) {\n              dat = jwtDecode(data.refresh);\n              authContext.setUser(dat);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Screen, null, React.createElement(View, {\n    style: {\n      width: \"100%\",\n      marginVertical: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.h_style\n  }, \"Log in\")), React.createElement(AppInput, {\n    placeholder: \"Username\",\n    style: styles.t_inp,\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    iconName: \"security\"\n  }), React.createElement(AppInput, {\n    placeholder: \"Password\",\n    style: styles.t_inp,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    iconName: \"key\",\n    secureTextEntry: true\n  }), React.createElement(View, {\n    style: styles.btn\n  }, React.createElement(AppButton, {\n    title: \"Login\",\n    style: styles.btn_style,\n    textStyle: styles.btn_text_Style,\n    height: 50,\n    width: \"100%\",\n    onPress: handleLogin\n  }), React.createElement(View, {\n    style: styles.option_view\n  }, React.createElement(Text, {\n    style: styles.option_txt\n  }, \"Dont have an account?.\"), React.createElement(Text, {\n    style: styles.txt,\n    onPress: function onPress() {\n      return navigation.navigate(\"Register\");\n    }\n  }, \"Click To Create\"))));\n}\n\nvar styles = StyleSheet.create({\n  h_style: {\n    width: \"100%\",\n    fontSize: 30,\n    fontFamily: \"Roboto\",\n    marginTop: \"10%\"\n  },\n  t_inp: {\n    height: 60,\n    width: \"100%\",\n    paddingBottom: 25,\n    marginLeft: 10\n  },\n  btn: {\n    justifyContent: \"space-around\",\n    marginTop: 10,\n    width: \"100%\"\n  },\n  btn_style: {\n    backgroundColor: \"#4ecdc4\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 2\n  },\n  btn_text_Style: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 17\n  },\n  option_view: {\n    marginTop: 50,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 1,\n    borderWidth: 2,\n    width: 350,\n    height: 70,\n    borderColor: \"gray\",\n    alignSelf: \"center\",\n    borderStyle: \"dashed\"\n  },\n  option_txt: {\n    fontSize: 15,\n    fontFamily: \"Roboto\"\n  },\n  txt: {\n    fontSize: 15,\n    fontFamily: \"Roboto\",\n    color: \"blue\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/Sulaiman/OneDrive/Desktop/FYP/aut_Veh_num_det/Auto_Veh_front_end/app/screens/LoginScreen.js"],"names":["React","useContext","useState","AppInput","Screen","AppButton","AuthContext","axios","jwtDecode","Url","LoginScreen","navigation","username","setUsername","password","setPassword","authContext","handleLogin","post","catch","error","console","log","data","refresh","dat","setUser","width","marginVertical","styles","h_style","t_inp","text","btn","btn_style","btn_text_Style","option_view","option_txt","txt","navigate","StyleSheet","create","fontSize","fontFamily","marginTop","height","paddingBottom","marginLeft","justifyContent","backgroundColor","alignItems","borderRadius","color","fontWeight","flexDirection","borderWidth","borderColor","alignSelf","borderStyle"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;AAEA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP;;AAEA,SAASC,WAAT,OAAqC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AACnC,kBAAgCT,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCX,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,WAAW,GAAGf,UAAU,CAACK,WAAD,CAA9B;;AACA,MAAMW,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKV,KAAK,CACzBW,IADoB,CACfT,GAAG,GAAG,eADS,EACQ;AAC3BG,cAAAA,QAAQ,EAAEA,QADiB;AAE3BE,cAAAA,QAAQ,EAAEA;AAFiB,aADR,EAKpBK,KALoB,CAKd,UAACC,KAAD,EAAW;AAChBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,aAPoB,CADL;;AAAA;AAAA;AACVG,YAAAA,IADU,yBACVA,IADU;;AASlB,gBAAIA,IAAI,CAACC,OAAT,EAAkB;AACVC,cAAAA,GADU,GACJjB,SAAS,CAACe,IAAI,CAACC,OAAN,CADL;AAEhBR,cAAAA,WAAW,CAACU,OAAZ,CAAoBD,GAApB;AACD;;AAZiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAcA,SACE,oBAAC,MAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,cAAc,EAAE;AAAjC;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,cADF,CADF,EAIE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAC,UADd;AAEE,IAAA,KAAK,EAAED,MAAM,CAACE,KAFhB;AAGE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUnB,WAAW,CAACmB,IAAD,CAArB;AAAA,KAHhB;AAIE,IAAA,QAAQ,EAAC;AAJX,IAJF,EAUE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAC,UADd;AAEE,IAAA,KAAK,EAAEH,MAAM,CAACE,KAFhB;AAGE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUjB,WAAW,CAACiB,IAAD,CAArB;AAAA,KAHhB;AAIE,IAAA,QAAQ,EAAC,KAJX;AAKE,IAAA,eAAe;AALjB,IAVF,EAiBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,KAAK,EAAEJ,MAAM,CAACK,SAFhB;AAGE,IAAA,SAAS,EAAEL,MAAM,CAACM,cAHpB;AAIE,IAAA,MAAM,EAAE,EAJV;AAKE,IAAA,KAAK,EAAE,MALT;AAME,IAAA,OAAO,EAAElB;AANX,IADF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACO;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ;AAApB,8BADF,EAEE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAER,MAAM,CAACS,GADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAM3B,UAAU,CAAC4B,QAAX,CAAoB,UAApB,CAAN;AAAA;AAFX,uBAFF,CATF,CAjBF,CADF;AAuCD;;AACD,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,OAAO,EAAE;AACPH,IAAAA,KAAK,EAAE,MADA;AAEPe,IAAAA,QAAQ,EAAE,EAFH;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,SAAS,EAAE;AAJJ,GADsB;AAQ/Bb,EAAAA,KAAK,EAAE;AACLc,IAAAA,MAAM,EAAE,EADH;AAELlB,IAAAA,KAAK,EAAE,MAFF;AAGLmB,IAAAA,aAAa,EAAE,EAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GARwB;AAc/Bd,EAAAA,GAAG,EAAE;AACHe,IAAAA,cAAc,EAAE,cADb;AAEHJ,IAAAA,SAAS,EAAE,EAFR;AAGHjB,IAAAA,KAAK,EAAE;AAHJ,GAd0B;AAmB/BO,EAAAA,SAAS,EAAE;AACTe,IAAAA,eAAe,EAAE,SADR;AAETD,IAAAA,cAAc,EAAE,QAFP;AAGTE,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,YAAY,EAAE;AAJL,GAnBoB;AAyB/BhB,EAAAA,cAAc,EAAE;AACdiB,IAAAA,KAAK,EAAE,OADO;AAEdC,IAAAA,UAAU,EAAE,MAFE;AAGdX,IAAAA,QAAQ,EAAE;AAHI,GAzBe;AA8B/BN,EAAAA,WAAW,EAAE;AACXQ,IAAAA,SAAS,EAAE,EADA;AAEXU,IAAAA,aAAa,EAAE,KAFJ;AAGXN,IAAAA,cAAc,EAAE,QAHL;AAIXE,IAAAA,UAAU,EAAE,QAJD;AAKXC,IAAAA,YAAY,EAAE,CALH;AAMXI,IAAAA,WAAW,EAAE,CANF;AAOX5B,IAAAA,KAAK,EAAE,GAPI;AAQXkB,IAAAA,MAAM,EAAE,EARG;AASXW,IAAAA,WAAW,EAAE,MATF;AAUXC,IAAAA,SAAS,EAAE,QAVA;AAWXC,IAAAA,WAAW,EAAE;AAXF,GA9BkB;AA2C/BrB,EAAAA,UAAU,EAAE;AACVK,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,UAAU,EAAE;AAFF,GA3CmB;AA+C/BL,EAAAA,GAAG,EAAE;AACHI,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,UAAU,EAAE,QAFT;AAGHS,IAAAA,KAAK,EAAE;AAHJ;AA/C0B,CAAlB,CAAf;AAsDA,eAAe1C,WAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport AppInput from \"../compnents/AppInput\";\r\nimport Screen from \"../compnents/Screen\";\r\nimport AppButton from \"../compnents/AppButton\";\r\nimport AuthContext from \"../Auth/Context\";\r\nimport axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport Url from \"../Auth/ApiUrlEndpoints\";\r\n\r\nfunction LoginScreen({ navigation }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const authContext = useContext(AuthContext);\r\n  const handleLogin = async () => {\r\n    const { data } = await axios\r\n      .post(Url + \"/user/create/\", {\r\n        username: username,\r\n        password: password,\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    if (data.refresh) {\r\n      const dat = jwtDecode(data.refresh);\r\n      authContext.setUser(dat);\r\n    }\r\n  };\r\n  return (\r\n    <Screen>\r\n      <View style={{ width: \"100%\", marginVertical: 25 }}>\r\n        <Text style={styles.h_style}>Log in</Text>\r\n      </View>\r\n      <AppInput\r\n        placeholder=\"Username\"\r\n        style={styles.t_inp}\r\n        onChangeText={(text) => setUsername(text)}\r\n        iconName=\"security\"\r\n      />\r\n      <AppInput\r\n        placeholder=\"Password\"\r\n        style={styles.t_inp}\r\n        onChangeText={(text) => setPassword(text)}\r\n        iconName=\"key\"\r\n        secureTextEntry\r\n      />\r\n      <View style={styles.btn}>\r\n        <AppButton\r\n          title=\"Login\"\r\n          style={styles.btn_style}\r\n          textStyle={styles.btn_text_Style}\r\n          height={50}\r\n          width={\"100%\"}\r\n          onPress={handleLogin}\r\n        />\r\n        <View style={styles.option_view}>\r\n          <Text style={styles.option_txt}>Dont have an account?.</Text>\r\n          <Text\r\n            style={styles.txt}\r\n            onPress={() => navigation.navigate(\"Register\")}\r\n          >\r\n            Click To Create\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    </Screen>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  h_style: {\r\n    width: \"100%\",\r\n    fontSize: 30,\r\n    fontFamily: \"Roboto\",\r\n    marginTop: \"10%\",\r\n  },\r\n\r\n  t_inp: {\r\n    height: 60,\r\n    width: \"100%\",\r\n    paddingBottom: 25,\r\n    marginLeft: 10,\r\n  },\r\n  btn: {\r\n    justifyContent: \"space-around\",\r\n    marginTop: 10,\r\n    width: \"100%\",\r\n  },\r\n  btn_style: {\r\n    backgroundColor: \"#4ecdc4\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 2,\r\n  },\r\n  btn_text_Style: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 17,\r\n  },\r\n  option_view: {\r\n    marginTop: 50,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 1,\r\n    borderWidth: 2,\r\n    width: 350,\r\n    height: 70,\r\n    borderColor: \"gray\",\r\n    alignSelf: \"center\",\r\n    borderStyle: \"dashed\",\r\n  },\r\n  option_txt: {\r\n    fontSize: 15,\r\n    fontFamily: \"Roboto\",\r\n  },\r\n  txt: {\r\n    fontSize: 15,\r\n    fontFamily: \"Roboto\",\r\n    color: \"blue\",\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}