{"ast":null,"code":"import React, { useContext } from \"react\";\nimport { MaterialCommunityIcons, Ionicons } from \"@expo/vector-icons\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport UserMaster from \"../../app/UserScreenComponents/UserMaster\";\nimport UserChallanList from \"../../app/UserScreenComponents/UserChallanList\";\nimport UploadChallan from \"../../app/UserScreenComponents/UploadChallan\";\nimport UserHistory from \"../UserScreenComponents/UserHistory\";\nimport Setting from \"../screens/Setting\";\nimport AuthContext from \"../Auth/Context\";\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList } from \"@react-navigation/drawer\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar drawer = createDrawerNavigator();\n\nvar UserNavigator = function UserNavigator() {\n  var navigation = useNavigation();\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"tomato\"\n      },\n      headerTintColor: \"white\"\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"HOME\",\n    component: UserMaster,\n    options: {\n      headerLeft: function headerLeft() {\n        return React.createElement(TouchableNativeFeedback, null, React.createElement(MaterialCommunityIcons, {\n          name: \"menu\",\n          size: 30,\n          color: \"black\",\n          onPress: function onPress() {\n            return navigation.toggleDrawer();\n          },\n          style: {\n            paddingRight: 10,\n            color: \"white\"\n          }\n        }));\n      }\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Record\",\n    component: UserChallanList\n  }), React.createElement(Stack.Screen, {\n    name: \"upload\",\n    component: UploadChallan\n  }));\n};\n\nvar UserTabNavigator = function UserTabNavigator() {\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerShown: false,\n      tabBarStyle: {\n        width: \"90%\",\n        left: \"5%\",\n        borderRadius: 5,\n        bottom: \"1%\"\n      }\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: UserNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"home\",\n          size: size,\n          color: color\n        });\n      },\n      tabBarItemStyle: {\n        borderRadius: 5\n      },\n      tabBarActiveTintColor: \"white\",\n      tabBarActiveBackgroundColor: \"tomato\",\n      tabBarInactiveTintColor: \"orange\"\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"History\",\n    component: UserHistory,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"history\",\n          size: size,\n          color: color\n        });\n      },\n      tabBarItemStyle: {\n        borderRadius: 5\n      },\n      tabBarActiveTintColor: \"white\",\n      tabBarActiveBackgroundColor: \"tomato\",\n      tabBarInactiveTintColor: \"orange\"\n    }\n  }));\n};\n\nvar def = function def() {\n  return React.createElement(React.Fragment, null);\n};\n\nvar CustomDrawer = function CustomDrawer(props) {\n  var authContext = useContext(AuthContext);\n  var user = authContext.user;\n  return React.createElement(DrawerContentScrollView, props, React.createElement(View, {\n    style: {\n      width: \"100%\"\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/bck.jpg\"),\n    style: {\n      width: \"100%\",\n      height: 150\n    }\n  }), React.createElement(View, {\n    style: {\n      position: \"absolute\",\n      top: 90\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    }\n  }, \"@\", user.name), React.createElement(Text, {\n    style: {\n      color: \"white\"\n    }\n  }, user.email))), React.createElement(DrawerItemList, props));\n};\n\nvar UserDrawer = function UserDrawer() {\n  var authContext = useContext(AuthContext);\n\n  var handleLogout = function handleLogout() {\n    authContext.setUser(null);\n    return def;\n  };\n\n  return React.createElement(drawer.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    initialRouteName: \".\",\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawer, props);\n    }\n  }, React.createElement(drawer.Screen, {\n    name: \".\",\n    component: UserTabNavigator,\n    options: {\n      drawerItemStyle: {\n        display: \"none\"\n      }\n    }\n  }), React.createElement(drawer.Screen, {\n    name: \".,\",\n    component: def,\n    options: {\n      drawerItemStyle: {\n        marginTop: \"150%\",\n        height: 1,\n        borderBottomWidth: 2,\n        color: \"black\"\n      }\n    }\n  }), React.createElement(drawer.Screen, {\n    name: \"Setting\",\n    component: Setting,\n    options: {\n      drawerIcon: function drawerIcon(_ref3) {\n        var size = _ref3.size,\n            color = _ref3.color;\n        return React.createElement(Ionicons, {\n          name: \"settings\",\n          size: size,\n          color: color\n        });\n      }\n    }\n  }), React.createElement(drawer.Screen, {\n    name: \"Log Out\",\n    component: handleLogout,\n    options: {\n      drawerIcon: function drawerIcon(_ref4) {\n        var size = _ref4.size,\n            color = _ref4.color;\n        return React.createElement(Ionicons, {\n          name: \"md-exit\",\n          size: size,\n          color: color\n        });\n      }\n    }\n  }));\n};\n\nexport default UserDrawer;","map":{"version":3,"sources":["C:/Users/Sulaiman/OneDrive/Desktop/FYP/aut_Veh_num_det/Auto_Veh_front_end/app/navigation/UserNavigation.js"],"names":["React","useContext","MaterialCommunityIcons","Ionicons","createNativeStackNavigator","createBottomTabNavigator","UserMaster","UserChallanList","UploadChallan","UserHistory","Setting","AuthContext","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","useNavigation","Stack","Tab","drawer","UserNavigator","navigation","headerStyle","backgroundColor","headerTintColor","headerLeft","toggleDrawer","paddingRight","color","UserTabNavigator","headerShown","tabBarStyle","width","left","borderRadius","bottom","tabBarIcon","size","tabBarItemStyle","tabBarActiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveTintColor","def","CustomDrawer","props","authContext","user","require","height","position","top","name","email","UserDrawer","handleLogout","setUser","drawerItemStyle","display","marginTop","borderBottomWidth","drawerIcon"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { MaterialCommunityIcons, Ionicons } from \"@expo/vector-icons\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport UserMaster from \"../../app/UserScreenComponents/UserMaster\";\r\nimport UserChallanList from \"../../app/UserScreenComponents/UserChallanList\";\r\nimport UploadChallan from \"../../app/UserScreenComponents/UploadChallan\";\r\nimport UserHistory from \"../UserScreenComponents/UserHistory\";\r\nimport Setting from \"../screens/Setting\";\r\nimport AuthContext from \"../Auth/Context\";\r\nimport {\r\n  createDrawerNavigator,\r\n  DrawerContentScrollView,\r\n  DrawerItemList,\r\n} from \"@react-navigation/drawer\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport { Image, TouchableNativeFeedback, View } from \"react-native\";\r\nimport { Text } from \"react-native\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\nconst drawer = createDrawerNavigator();\r\n\r\nconst UserNavigator = () => {\r\n  const navigation = useNavigation();\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: \"tomato\",\r\n        },\r\n        headerTintColor: \"white\",\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        name=\"HOME\"\r\n        component={UserMaster}\r\n        options={{\r\n          headerLeft: () => (\r\n            <TouchableNativeFeedback>\r\n              <MaterialCommunityIcons\r\n                name=\"menu\"\r\n                size={30}\r\n                color=\"black\"\r\n                onPress={() => navigation.toggleDrawer()}\r\n                style={{ paddingRight: 10, color: \"white\" }}\r\n              />\r\n            </TouchableNativeFeedback>\r\n          ),\r\n        }}\r\n      />\r\n      <Stack.Screen name=\"Record\" component={UserChallanList} />\r\n      <Stack.Screen name=\"upload\" component={UploadChallan} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\nconst UserTabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarStyle: {\r\n          width: \"90%\",\r\n          left: \"5%\",\r\n          borderRadius: 5,\r\n          bottom: \"1%\",\r\n        },\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={UserNavigator}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"home\" size={size} color={color} />\r\n          ),\r\n          tabBarItemStyle: { borderRadius: 5 },\r\n          tabBarActiveTintColor: \"white\",\r\n          tabBarActiveBackgroundColor: \"tomato\",\r\n          tabBarInactiveTintColor: \"orange\",\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"History\"\r\n        component={UserHistory}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"history\" size={size} color={color} />\r\n          ),\r\n          tabBarItemStyle: { borderRadius: 5 },\r\n          tabBarActiveTintColor: \"white\",\r\n          tabBarActiveBackgroundColor: \"tomato\",\r\n          tabBarInactiveTintColor: \"orange\",\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst def = () => {\r\n  return <></>;\r\n};\r\n\r\nconst CustomDrawer = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n  const user = authContext.user;\r\n  return (\r\n    <DrawerContentScrollView {...props}>\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Image\r\n          source={require(\"../assets/bck.jpg\")}\r\n          style={{ width: \"100%\", height: 150 }}\r\n        />\r\n        <View style={{ position: \"absolute\", top: 90 }}>\r\n          <Text style={{ color: \"white\" }}>@{user.name}</Text>\r\n          <Text style={{ color: \"white\" }}>{user.email}</Text>\r\n        </View>\r\n      </View>\r\n      <DrawerItemList {...props} />\r\n    </DrawerContentScrollView>\r\n  );\r\n};\r\n\r\nconst UserDrawer = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const handleLogout = () => {\r\n    authContext.setUser(null);\r\n    return def;\r\n  };\r\n  return (\r\n    <drawer.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n      initialRouteName=\".\"\r\n      drawerContent={(props) => <CustomDrawer {...props} />}\r\n    >\r\n      <drawer.Screen\r\n        name=\".\"\r\n        component={UserTabNavigator}\r\n        options={{ drawerItemStyle: { display: \"none\" } }}\r\n      />\r\n      <drawer.Screen\r\n        name=\".,\"\r\n        component={def}\r\n        options={{\r\n          drawerItemStyle: {\r\n            marginTop: \"150%\",\r\n            height: 1,\r\n            borderBottomWidth: 2,\r\n            color: \"black\",\r\n          },\r\n        }}\r\n      />\r\n\r\n      <drawer.Screen\r\n        name=\"Setting\"\r\n        component={Setting}\r\n        options={{\r\n          drawerIcon: ({ size, color }) => (\r\n            <Ionicons name=\"settings\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <drawer.Screen\r\n        name=\"Log Out\"\r\n        component={handleLogout}\r\n        options={{\r\n          drawerIcon: ({ size, color }) => (\r\n            <Ionicons name=\"md-exit\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </drawer.Navigator>\r\n  );\r\n};\r\n\r\nexport default UserDrawer;\r\n"]},"metadata":{},"sourceType":"module"}