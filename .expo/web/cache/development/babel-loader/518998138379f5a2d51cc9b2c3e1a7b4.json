{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport AppInput from \"../compnents/AppInput\";\nimport { Formik } from \"formik\";\nimport AppButton from \"../compnents/AppButton\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport Url from \"../Authorization/ApiUrlEndpoints\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Color } from \"../assets/colors\";\n\nfunction UserQuery(_ref) {\n  var navigation = _ref.navigation;\n\n  var ErrorMessage = function ErrorMessage(_ref2) {\n    var error = _ref2.error,\n        visible = _ref2.visible;\n    if (!visible || !error) return null;\n    return React.createElement(Text, {\n      style: {\n        color: \"red\"\n      }\n    }, error);\n  };\n\n  var schema = Yup.object().shape({\n    name: Yup.string().required().label(\"UserName\"),\n    email: Yup.string().email().required().label(\"email\"),\n    mesage: Yup.string().required().label(\"mesage\")\n  });\n\n  var handleUserQuery = function handleUserQuery(_ref3) {\n    var name, email, mesage, Data, _await$axios$post, data;\n\n    return _regeneratorRuntime.async(function handleUserQuery$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = _ref3.name, email = _ref3.email, mesage = _ref3.mesage;\n            Data = new FormData();\n            Data.append(\"name\", name);\n            Data.append(\"email\", email);\n            Data.append(\"mesage\", mesage);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.post(Url + \"/cw/query/\", Data));\n\n          case 7:\n            _await$axios$post = _context.sent;\n            data = _await$axios$post.data;\n            navigation.navigate(\"HOME\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.cont\n  }, React.createElement(View, {\n    style: {\n      alignSelf: \"flex-start\",\n      marginBottom: 20,\n      flexDirection: \"row\"\n    }\n  }, React.createElement(Ionicons, {\n    name: \"chevron-back\",\n    size: 20,\n    color: Color.DuoGray\n  }), React.createElement(Text, {\n    style: {\n      color: Color.DuoGray\n    },\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }, \"Go Back\")), React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      mesage: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      return handleUserQuery(values);\n    },\n    validationSchema: schema\n  }, function (_ref4) {\n    var handleChange = _ref4.handleChange,\n        handleSubmit = _ref4.handleSubmit,\n        errors = _ref4.errors,\n        setFieldTouched = _ref4.setFieldTouched,\n        touched = _ref4.touched;\n    return React.createElement(View, {\n      style: {\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }\n    }, React.createElement(AppInput, {\n      style: styles.s,\n      placeholder: \"Name\",\n      placeholderTextColor: Color.DuoGray,\n      onChangeText: handleChange(\"name\"),\n      onBlur: function onBlur() {\n        return setFieldTouched(\"email\");\n      },\n      viewStyle: styles.v\n    }), React.createElement(ErrorMessage, {\n      error: errors.name,\n      visible: touched.name\n    }), React.createElement(AppInput, {\n      placeholder: \"Email\",\n      placeholderTextColor: Color.DuoGray,\n      style: styles.s,\n      onChangeText: handleChange(\"email\"),\n      onBlur: function onBlur() {\n        return setFieldTouched(\"email\");\n      },\n      viewStyle: styles.v\n    }), React.createElement(ErrorMessage, {\n      error: errors.email,\n      visible: touched.email\n    }), React.createElement(AppInput, {\n      placeholder: \"Message\",\n      placeholderTextColor: Color.DuoGray,\n      style: {\n        width: \"100%\",\n        textAlignVertical: \"top\",\n        color: \"white\"\n      },\n      onChangeText: handleChange(\"mesage\"),\n      viewStyle: styles.msg_v,\n      numberOfLines: 10,\n      multiline: true\n    }), React.createElement(ErrorMessage, {\n      error: errors.mesage,\n      visible: touched.mesage\n    }), React.createElement(AppButton, {\n      title: \"Submit\",\n      onPress: handleSubmit,\n      style: styles.btn_s,\n      height: 50,\n      width: \"50%\",\n      textStyle: styles.btn_t\n    }));\n  }));\n}\n\nvar styles = StyleSheet.create({\n  cont: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n    flex: 1,\n    padding: 10,\n    backgroundColor: Color.DuoBlack\n  },\n  btn_s: {\n    backgroundColor: Color.Duolightb,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    marginTop: 5,\n    borderRadius: 25\n  },\n  btn_t: {\n    fontSize: 17,\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  msg_v: {\n    width: \"80%\",\n    height: \"30%\",\n    justifyContent: \"flex-start\",\n    paddingRight: 0,\n    paddingTop: 10,\n    paddingBottom: 0,\n    borderRadius: 20,\n    backgroundColor: Color.DuoBackGray,\n    borderColor: Color.DuoGray\n  },\n  s: {\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: Color.DuoBackGray,\n    borderColor: Color.DuoGray,\n    color: \"white\"\n  },\n  v: {\n    width: \"80%\",\n    borderRadius: 25,\n    backgroundColor: Color.DuoBackGray,\n    borderColor: Color.DuoGray\n  }\n});\nexport default UserQuery;","map":{"version":3,"names":["React","AppInput","Formik","AppButton","Yup","axios","Url","Ionicons","Color","UserQuery","navigation","ErrorMessage","error","visible","color","schema","object","shape","name","string","required","label","email","mesage","handleUserQuery","Data","FormData","append","post","data","navigate","styles","cont","alignSelf","marginBottom","flexDirection","DuoGray","goBack","values","handleChange","handleSubmit","errors","setFieldTouched","touched","justifyContent","alignItems","s","v","width","textAlignVertical","msg_v","btn_s","btn_t","StyleSheet","create","marginTop","Platform","OS","StatusBar","currentHeight","flex","padding","backgroundColor","DuoBlack","Duolightb","borderRadius","fontSize","fontWeight","height","paddingRight","paddingTop","paddingBottom","DuoBackGray","borderColor"],"sources":["C:/Users/sulai/Desktop/fyp/FYP/aut_Veh_num_det/Auto_Veh_front_end/app/UserScreenComponents/UserQuery.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet, Text, Platform, StatusBar } from \"react-native\";\r\nimport AppInput from \"../compnents/AppInput\";\r\nimport { Formik } from \"formik\";\r\nimport AppButton from \"../compnents/AppButton\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport Url from \"../Authorization/ApiUrlEndpoints\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { Color } from \"../assets/colors\";\r\n\r\nfunction UserQuery({ navigation }) {\r\n  const ErrorMessage = ({ error, visible }) => {\r\n    if (!visible || !error) return null;\r\n    return <Text style={{ color: \"red\" }}>{error}</Text>;\r\n  };\r\n  let schema = Yup.object().shape({\r\n    name: Yup.string().required().label(\"UserName\"),\r\n    email: Yup.string().email().required().label(\"email\"),\r\n    mesage: Yup.string().required().label(\"mesage\"),\r\n  });\r\n\r\n  const handleUserQuery = async ({ name, email, mesage }) => {\r\n    let Data = new FormData();\r\n    Data.append(\"name\", name);\r\n    Data.append(\"email\", email);\r\n    Data.append(\"mesage\", mesage);\r\n    const { data } = await axios.post(Url + \"/cw/query/\", Data);\r\n    navigation.navigate(\"HOME\");\r\n  };\r\n  return (\r\n    <View style={styles.cont}>\r\n      <View\r\n        style={{\r\n          alignSelf: \"flex-start\",\r\n          marginBottom: 20,\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <Ionicons name=\"chevron-back\" size={20} color={Color.DuoGray} />\r\n        <Text\r\n          style={{ color: Color.DuoGray }}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          Go Back\r\n        </Text>\r\n      </View>\r\n      <Formik\r\n        initialValues={{ name: \"\", email: \"\", mesage: \"\" }}\r\n        onSubmit={(values) => handleUserQuery(values)}\r\n        validationSchema={schema}\r\n      >\r\n        {({ handleChange, handleSubmit, errors, setFieldTouched, touched }) => (\r\n          <View\r\n            style={{\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <AppInput\r\n              style={styles.s}\r\n              placeholder=\"Name\"\r\n              placeholderTextColor={Color.DuoGray}\r\n              onChangeText={handleChange(\"name\")}\r\n              onBlur={() => setFieldTouched(\"email\")}\r\n              viewStyle={styles.v}\r\n            />\r\n            <ErrorMessage error={errors.name} visible={touched.name} />\r\n            <AppInput\r\n              placeholder=\"Email\"\r\n              placeholderTextColor={Color.DuoGray}\r\n              style={styles.s}\r\n              onChangeText={handleChange(\"email\")}\r\n              onBlur={() => setFieldTouched(\"email\")}\r\n              viewStyle={styles.v}\r\n            />\r\n            <ErrorMessage error={errors.email} visible={touched.email} />\r\n            <AppInput\r\n              placeholder=\"Message\"\r\n              placeholderTextColor={Color.DuoGray}\r\n              style={{\r\n                width: \"100%\",\r\n                textAlignVertical: \"top\",\r\n                color: \"white\",\r\n              }}\r\n              onChangeText={handleChange(\"mesage\")}\r\n              viewStyle={styles.msg_v}\r\n              numberOfLines={10}\r\n              multiline\r\n            />\r\n            <ErrorMessage error={errors.mesage} visible={touched.mesage} />\r\n            <AppButton\r\n              title=\"Submit\"\r\n              onPress={handleSubmit}\r\n              style={styles.btn_s}\r\n              height={50}\r\n              width=\"50%\"\r\n              textStyle={styles.btn_t}\r\n            />\r\n          </View>\r\n        )}\r\n      </Formik>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  cont: {\r\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\r\n    flex: 1,\r\n    padding: 10,\r\n    backgroundColor: Color.DuoBlack,\r\n  },\r\n  btn_s: {\r\n    backgroundColor: Color.Duolightb,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    marginTop: 5,\r\n    borderRadius: 25,\r\n  },\r\n  btn_t: {\r\n    fontSize: 17,\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n  },\r\n  msg_v: {\r\n    width: \"80%\",\r\n    height: \"30%\",\r\n    justifyContent: \"flex-start\",\r\n    paddingRight: 0,\r\n    paddingTop: 10,\r\n    paddingBottom: 0,\r\n    borderRadius: 20,\r\n    backgroundColor: Color.DuoBackGray,\r\n    borderColor: Color.DuoGray,\r\n  },\r\n  s: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: Color.DuoBackGray,\r\n    borderColor: Color.DuoGray,\r\n    color: \"white\",\r\n  },\r\n  v: {\r\n    width: \"80%\",\r\n    borderRadius: 25,\r\n    backgroundColor: Color.DuoBackGray,\r\n    borderColor: Color.DuoGray,\r\n  },\r\n});\r\n\r\nexport default UserQuery;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}