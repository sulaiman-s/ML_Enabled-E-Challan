{"ast":null,"code":"import React, { useContext } from \"react\";\nimport { MaterialCommunityIcons, Ionicons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport UserHistory from \"../UserScreenComponents/UserHistory\";\nimport AdminMaster from \"../AdminScreenComponents/AdminMaster\";\nimport AdminCapture from \"../AdminScreenComponents/AdminCapture\";\nimport UserChallanList from \"../UserScreenComponents/UserChallanList\";\nimport AdminChallanEntries from \"../AdminScreenComponents/AdminChallanEntries\";\nimport AdminVerification from \"../AdminScreenComponents/AdminVerification\";\nimport Setting from \"../screens/Setting\";\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList } from \"@react-navigation/drawer\";\nimport AuthContext from \"../Auth/Context\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar drawer = createDrawerNavigator();\n\nvar AdminNavigator = function AdminNavigator() {\n  var navigation = useNavigation();\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"tomato\"\n      },\n      headerTintColor: \"white\"\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"HOME\",\n    component: AdminMaster,\n    options: {\n      headerLeft: function headerLeft() {\n        return React.createElement(TouchableNativeFeedback, null, React.createElement(MaterialCommunityIcons, {\n          name: \"menu\",\n          size: 30,\n          color: \"white\",\n          onPress: function onPress() {\n            return navigation.openDrawer();\n          },\n          style: {\n            paddingRight: 10,\n            fontWeight: \"bold\"\n          }\n        }));\n      }\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"capture\",\n    component: AdminCapture,\n    options: {\n      title: \"Capture\"\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"entry\",\n    component: AdminChallanEntries,\n    options: {\n      title: \"Challan Fields \"\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"verify\",\n    component: AdminVerification,\n    options: {\n      title: \"Final Verification\"\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Record\",\n    component: UserChallanList,\n    options: {\n      title: \"Check Records\"\n    }\n  }));\n};\n\nvar AdminTabNavigator = function AdminTabNavigator() {\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      tabBarHideOnKeyboard: true,\n      headerShown: false,\n      tabBarStyle: {\n        width: \"90%\",\n        left: \"5%\",\n        borderRadius: 5,\n        bottom: \"1%\"\n      }\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: AdminNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"home\",\n          size: size,\n          color: color\n        });\n      },\n      tabBarItemStyle: {\n        borderRadius: 5\n      },\n      tabBarActiveTintColor: \"white\",\n      tabBarActiveBackgroundColor: \"tomato\",\n      tabBarInactiveTintColor: \"orange\"\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"History\",\n    component: UserHistory,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"history\",\n          size: size,\n          color: color\n        });\n      },\n      tabBarItemStyle: {\n        borderRadius: 5\n      },\n      tabBarActiveTintColor: \"white\",\n      tabBarActiveBackgroundColor: \"tomato\",\n      tabBarInactiveTintColor: \"orange\"\n    }\n  }));\n};\n\nvar def = function def() {\n  return React.createElement(React.Fragment, null);\n};\n\nvar CustomDrawer = function CustomDrawer(props) {\n  var authContext = useContext(AuthContext);\n  var user = authContext.user;\n  return React.createElement(DrawerContentScrollView, props, React.createElement(View, {\n    style: {\n      width: \"100%\"\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/bck.jpg\"),\n    style: {\n      width: \"100%\",\n      height: 150\n    }\n  }), React.createElement(View, {\n    style: {\n      position: \"absolute\",\n      top: 90\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    }\n  }, \"@\", user.name), React.createElement(Text, {\n    style: {\n      color: \"white\"\n    }\n  }, user.email))), React.createElement(DrawerItemList, props));\n};\n\nvar AdminDrawer = function AdminDrawer() {\n  var authContext = useContext(AuthContext);\n\n  var handleLogout = function handleLogout() {\n    authContext.setUser(null);\n    return React.createElement(React.Fragment, null);\n  };\n\n  return React.createElement(drawer.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    initialRouteName: \".\",\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawer, props);\n    }\n  }, React.createElement(drawer.Screen, {\n    name: \".\",\n    component: AdminTabNavigator,\n    options: {\n      drawerItemStyle: {\n        display: \"none\"\n      }\n    }\n  }), React.createElement(drawer.Screen, {\n    name: \".,\",\n    component: def,\n    options: {\n      drawerItemStyle: {\n        marginTop: \"150%\",\n        height: 1,\n        borderBottomWidth: 2,\n        color: \"black\"\n      }\n    }\n  }), React.createElement(drawer.Screen, {\n    name: \"Setting\",\n    component: Setting,\n    options: {\n      drawerIcon: function drawerIcon(_ref3) {\n        var size = _ref3.size,\n            color = _ref3.color;\n        return React.createElement(Ionicons, {\n          name: \"settings\",\n          size: size,\n          color: color\n        });\n      }\n    }\n  }), React.createElement(drawer.Screen, {\n    name: \"Log Out\",\n    component: handleLogout,\n    options: {\n      drawerIcon: function drawerIcon(_ref4) {\n        var size = _ref4.size,\n            color = _ref4.color;\n        return React.createElement(Ionicons, {\n          name: \"md-exit\",\n          size: size,\n          color: color\n        });\n      }\n    }\n  }));\n};\n\nexport default AdminDrawer;","map":{"version":3,"sources":["C:/Users/Sulaiman/OneDrive/Desktop/FYP/aut_Veh_num_det/Auto_Veh_front_end/app/navigation/AdminNavigation.js"],"names":["React","useContext","MaterialCommunityIcons","Ionicons","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","UserHistory","AdminMaster","AdminCapture","UserChallanList","AdminChallanEntries","AdminVerification","Setting","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","AuthContext","useNavigation","Stack","Tab","drawer","AdminNavigator","navigation","headerStyle","backgroundColor","headerTintColor","headerLeft","openDrawer","paddingRight","fontWeight","title","AdminTabNavigator","tabBarHideOnKeyboard","headerShown","tabBarStyle","width","left","borderRadius","bottom","tabBarIcon","color","size","tabBarItemStyle","tabBarActiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveTintColor","def","CustomDrawer","props","authContext","user","require","height","position","top","name","email","AdminDrawer","handleLogout","setUser","drawerItemStyle","display","marginTop","borderBottomWidth","drawerIcon"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { MaterialCommunityIcons, Ionicons } from \"@expo/vector-icons\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport UserHistory from \"../UserScreenComponents/UserHistory\";\r\nimport AdminMaster from \"../AdminScreenComponents/AdminMaster\";\r\nimport AdminCapture from \"../AdminScreenComponents/AdminCapture\";\r\nimport UserChallanList from \"../UserScreenComponents/UserChallanList\";\r\nimport AdminChallanEntries from \"../AdminScreenComponents/AdminChallanEntries\";\r\nimport AdminVerification from \"../AdminScreenComponents/AdminVerification\";\r\nimport Setting from \"../screens/Setting\";\r\nimport {\r\n  createDrawerNavigator,\r\n  DrawerContentScrollView,\r\n  DrawerItemList,\r\n} from \"@react-navigation/drawer\";\r\nimport AuthContext from \"../Auth/Context\";\r\nimport { TouchableNativeFeedback } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport { Image, View, Text } from \"react-native\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\nconst drawer = createDrawerNavigator();\r\n\r\nconst AdminNavigator = () => {\r\n  const navigation = useNavigation();\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: \"tomato\",\r\n        },\r\n        headerTintColor: \"white\",\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        name=\"HOME\"\r\n        component={AdminMaster}\r\n        options={{\r\n          headerLeft: () => (\r\n            <TouchableNativeFeedback>\r\n              <MaterialCommunityIcons\r\n                name=\"menu\"\r\n                size={30}\r\n                color=\"white\"\r\n                onPress={() => navigation.openDrawer()}\r\n                style={{ paddingRight: 10, fontWeight: \"bold\" }}\r\n              />\r\n            </TouchableNativeFeedback>\r\n          ),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"capture\"\r\n        component={AdminCapture}\r\n        options={{ title: \"Capture\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"entry\"\r\n        component={AdminChallanEntries}\r\n        options={{ title: \"Challan Fields \" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"verify\"\r\n        component={AdminVerification}\r\n        options={{ title: \"Final Verification\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Record\"\r\n        component={UserChallanList}\r\n        options={{ title: \"Check Records\" }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\nconst AdminTabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        tabBarHideOnKeyboard: true,\r\n        headerShown: false,\r\n        tabBarStyle: {\r\n          width: \"90%\",\r\n          left: \"5%\",\r\n          borderRadius: 5,\r\n          bottom: \"1%\",\r\n        },\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={AdminNavigator}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"home\" size={size} color={color} />\r\n          ),\r\n          tabBarItemStyle: { borderRadius: 5 },\r\n          tabBarActiveTintColor: \"white\",\r\n          tabBarActiveBackgroundColor: \"tomato\",\r\n          tabBarInactiveTintColor: \"orange\",\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"History\"\r\n        component={UserHistory}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"history\" size={size} color={color} />\r\n          ),\r\n          tabBarItemStyle: { borderRadius: 5 },\r\n          tabBarActiveTintColor: \"white\",\r\n          tabBarActiveBackgroundColor: \"tomato\",\r\n          tabBarInactiveTintColor: \"orange\",\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst def = () => {\r\n  return <></>;\r\n};\r\n\r\nconst CustomDrawer = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n  const user = authContext.user;\r\n  return (\r\n    <DrawerContentScrollView {...props}>\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Image\r\n          source={require(\"../assets/bck.jpg\")}\r\n          style={{ width: \"100%\", height: 150 }}\r\n        />\r\n        <View style={{ position: \"absolute\", top: 90 }}>\r\n          <Text style={{ color: \"white\" }}>@{user.name}</Text>\r\n          <Text style={{ color: \"white\" }}>{user.email}</Text>\r\n        </View>\r\n      </View>\r\n      <DrawerItemList {...props} />\r\n    </DrawerContentScrollView>\r\n  );\r\n};\r\n\r\nconst AdminDrawer = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const handleLogout = () => {\r\n    authContext.setUser(null);\r\n    return <></>;\r\n  };\r\n  return (\r\n    <drawer.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n      initialRouteName=\".\"\r\n      drawerContent={(props) => <CustomDrawer {...props} />}\r\n    >\r\n      <drawer.Screen\r\n        name=\".\"\r\n        component={AdminTabNavigator}\r\n        options={{ drawerItemStyle: { display: \"none\" } }}\r\n      />\r\n      <drawer.Screen\r\n        name=\".,\"\r\n        component={def}\r\n        options={{\r\n          drawerItemStyle: {\r\n            marginTop: \"150%\",\r\n            height: 1,\r\n            borderBottomWidth: 2,\r\n            color: \"black\",\r\n          },\r\n        }}\r\n      />\r\n\r\n      <drawer.Screen\r\n        name=\"Setting\"\r\n        component={Setting}\r\n        options={{\r\n          drawerIcon: ({ size, color }) => (\r\n            <Ionicons name=\"settings\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <drawer.Screen\r\n        name=\"Log Out\"\r\n        component={handleLogout}\r\n        options={{\r\n          drawerIcon: ({ size, color }) => (\r\n            <Ionicons name=\"md-exit\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </drawer.Navigator>\r\n  );\r\n};\r\n\r\nexport default AdminDrawer;\r\n"]},"metadata":{},"sourceType":"module"}