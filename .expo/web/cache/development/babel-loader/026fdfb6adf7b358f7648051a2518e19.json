{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport AppButton from \"../compnents/AppButton\";\nimport AppInput from \"../compnents/AppInput\";\nimport Screen from \"../compnents/Screen\";\nimport AuthContext from \"../Auth/Context\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport Url from \"../Auth/ApiUrlEndpoints\";\n\nfunction RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setusername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gmail = _useState4[0],\n      setGmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPass = _useState8[0],\n      setConfirmPass = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      rdata = _useState10[0],\n      setData = _useState10[1];\n\n  var authContext = useContext(AuthContext);\n  var reg = new FormData();\n  reg.append(\"email\", gmail);\n  reg.append(\"password\", password);\n  reg.append(\"username\", username);\n\n  var handleRegister = function handleRegister() {\n    var _await$axios$post$cat, data, _await$axios$post$cat2, _data, dat;\n\n    return _regeneratorRuntime.async(function handleRegister$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(Url + \"/auth/users/\", {\n              email: gmail,\n              username: username,\n              password: confirmPass\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 2:\n            _await$axios$post$cat = _context.sent;\n            data = _await$axios$post$cat.data;\n\n            if (!data) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.post(Url + \"/user/create/\", {\n              username: username,\n              password: password\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 7:\n            _await$axios$post$cat2 = _context.sent;\n            _data = _await$axios$post$cat2.data;\n\n            if (_data) {\n              dat = jwtDecode(_data.refresh);\n              authContext.setUser(dat);\n            }\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Screen, null, React.createElement(View, {\n    style: {\n      width: \"100%\",\n      marginVertical: 20\n    }\n  }, React.createElement(Text, {\n    style: styles.h_style\n  }, \"Register\")), React.createElement(AppInput, {\n    placeholder: \"User Name\",\n    onChangeText: function onChangeText(text) {\n      return setusername(text);\n    },\n    style: styles.input,\n    iconName: \"information\"\n  }), React.createElement(AppInput, {\n    placeholder: \"Gmail\",\n    onChangeText: function onChangeText(text) {\n      return setGmail(text);\n    },\n    style: styles.input,\n    iconName: \"gmail\"\n  }), React.createElement(AppInput, {\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    style: styles.input,\n    iconName: \"key-variant\"\n  }), React.createElement(AppInput, {\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(text) {\n      return setConfirmPass(text);\n    },\n    style: styles.input,\n    iconName: \"key-star\"\n  }), React.createElement(View, {\n    style: {\n      width: \"99%\",\n      marginVertical: 10\n    }\n  }, React.createElement(AppButton, {\n    title: \"Next\",\n    textStyle: styles.btn_t,\n    height: 50,\n    width: \"100%\",\n    style: styles.btn,\n    onPress: handleRegister\n  })), React.createElement(View, {\n    style: styles.option_view\n  }, React.createElement(Text, {\n    style: styles.option_txt\n  }, \"Already have an account?.\"), React.createElement(Text, {\n    style: styles.txt,\n    onPress: function onPress() {\n      return navigation.navigate(\"Login\");\n    }\n  }, \"Click To Log In\")));\n}\n\nvar styles = StyleSheet.create({\n  cont: {\n    marginTop: 20,\n    flex: 1,\n    alignItems: \"center\",\n    width: \"100%\",\n    marginTop: Platform.OS == \"android\" ? StatusBar.currentHeight : 0,\n    padding: 10\n  },\n  input: {\n    height: 50,\n    width: \"100%\",\n    paddingBottom: 20,\n    marginLeft: 10\n  },\n  btn: {\n    backgroundColor: \"#4ecdc4\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 5\n  },\n  btn_t: {\n    color: \"white\"\n  },\n  h_style: {\n    width: \"100%\",\n    fontSize: 30,\n    fontFamily: \"Roboto\",\n    marginTop: \"10%\"\n  },\n  option_view: {\n    marginTop: 50,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 1,\n    borderWidth: 2,\n    width: 350,\n    height: 70,\n    borderColor: \"gray\",\n    alignSelf: \"center\",\n    borderStyle: \"dashed\"\n  },\n  option_txt: {\n    fontSize: 15,\n    fontFamily: \"Roboto\"\n  },\n  txt: {\n    fontSize: 15,\n    fontFamily: \"Roboto\",\n    color: \"blue\"\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"sources":["C:/Users/Sulaiman/OneDrive/Desktop/FYP/aut_Veh_num_det/Auto_Veh_front_end/app/screens/RegisterScreen.js"],"names":["React","useContext","useState","AppButton","AppInput","Screen","AuthContext","axios","jwtDecode","Url","RegisterScreen","navigation","username","setusername","gmail","setGmail","password","setPassword","confirmPass","setConfirmPass","rdata","setData","authContext","reg","FormData","append","handleRegister","post","email","catch","error","console","log","data","dat","refresh","setUser","width","marginVertical","styles","h_style","text","input","btn_t","btn","option_view","option_txt","txt","navigate","StyleSheet","create","cont","marginTop","flex","alignItems","Platform","OS","StatusBar","currentHeight","padding","height","paddingBottom","marginLeft","backgroundColor","justifyContent","borderRadius","color","fontSize","fontFamily","flexDirection","borderWidth","borderColor","alignSelf","borderStyle"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;;;AAEA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP;;AAEA,SAASC,cAAT,OAAwC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AACtC,kBAAgCT,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA0BX,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOY,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCb,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOc,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAsCf,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOgB,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAyBjB,QAAQ,EAAjC;AAAA;AAAA,MAAOkB,KAAP;AAAA,MAAcC,OAAd;;AACA,MAAMC,WAAW,GAAGrB,UAAU,CAACK,WAAD,CAA9B;AACA,MAAMiB,GAAG,GAAG,IAAIC,QAAJ,EAAZ;AACAD,EAAAA,GAAG,CAACE,MAAJ,CAAW,OAAX,EAAoBX,KAApB;AACAS,EAAAA,GAAG,CAACE,MAAJ,CAAW,UAAX,EAAuBT,QAAvB;AACAO,EAAAA,GAAG,CAACE,MAAJ,CAAW,UAAX,EAAuBb,QAAvB;;AACA,MAAMc,cAAc,GAAG,SAAjBA,cAAiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEnB,KAAK,CACzBoB,IADoB,CACflB,GAAG,GAAG,cADS,EACO;AAC1BmB,cAAAA,KAAK,EAAEd,KADmB;AAE1BF,cAAAA,QAAQ,EAAEA,QAFgB;AAG1BI,cAAAA,QAAQ,EAAEE;AAHgB,aADP,EAMpBW,KANoB,CAMd,UAACC,KAAD,EAAW;AAChBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,aARoB,CADF;;AAAA;AAAA;AACbG,YAAAA,IADa,yBACbA,IADa;;AAAA,iBAUjBA,IAViB;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAWI1B,KAAK,CACzBoB,IADoB,CACflB,GAAG,GAAG,eADS,EACQ;AAC3BG,cAAAA,QAAQ,EAAEA,QADiB;AAE3BI,cAAAA,QAAQ,EAAEA;AAFiB,aADR,EAKpBa,KALoB,CAKd,UAACC,KAAD,EAAW;AAChBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,aAPoB,CAXJ;;AAAA;AAAA;AAWXG,YAAAA,KAXW,0BAWXA,IAXW;;AAmBnB,gBAAIA,KAAJ,EAAU;AACFC,cAAAA,GADE,GACI1B,SAAS,CAACyB,KAAI,CAACE,OAAN,CADb;AAERb,cAAAA,WAAW,CAACc,OAAZ,CAAoBF,GAApB;AACD;;AAtBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AA0BA,SACE,oBAAC,MAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,cAAc,EAAE;AAAjC;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,gBADF,CADF,EAIE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAC,WADd;AAEE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAU5B,WAAW,CAAC4B,IAAD,CAArB;AAAA,KAFhB;AAGE,IAAA,KAAK,EAAEF,MAAM,CAACG,KAHhB;AAIE,IAAA,QAAQ,EAAC;AAJX,IAJF,EAUE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,YAAY,EAAE,sBAACD,IAAD;AAAA,aAAU1B,QAAQ,CAAC0B,IAAD,CAAlB;AAAA,KAFhB;AAGE,IAAA,KAAK,EAAEF,MAAM,CAACG,KAHhB;AAIE,IAAA,QAAQ,EAAC;AAJX,IAVF,EAgBE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAC,UADd;AAEE,IAAA,YAAY,EAAE,sBAACD,IAAD;AAAA,aAAUxB,WAAW,CAACwB,IAAD,CAArB;AAAA,KAFhB;AAGE,IAAA,KAAK,EAAEF,MAAM,CAACG,KAHhB;AAIE,IAAA,QAAQ,EAAC;AAJX,IAhBF,EAsBE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAC,kBADd;AAEE,IAAA,YAAY,EAAE,sBAACD,IAAD;AAAA,aAAUtB,cAAc,CAACsB,IAAD,CAAxB;AAAA,KAFhB;AAGE,IAAA,KAAK,EAAEF,MAAM,CAACG,KAHhB;AAIE,IAAA,QAAQ,EAAC;AAJX,IAtBF,EA4BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,cAAc,EAAE;AAAhC;AAAb,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,SAAS,EAAEC,MAAM,CAACI,KAFpB;AAGE,IAAA,MAAM,EAAE,EAHV;AAIE,IAAA,KAAK,EAAE,MAJT;AAKE,IAAA,KAAK,EAAEJ,MAAM,CAACK,GALhB;AAME,IAAA,OAAO,EAAElB;AANX,IADF,CA5BF,EAsCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACM;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO;AAApB,iCADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ,GAApB;AAAyB,IAAA,OAAO,EAAE;AAAA,aAAMpC,UAAU,CAACqC,QAAX,CAAoB,OAApB,CAAN;AAAA;AAAlC,uBAFF,CAtCF,CADF;AA+CD;;AACD,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,IAAI,EAAE,CAFF;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJjB,IAAAA,KAAK,EAAE,MAJH;AAKJe,IAAAA,SAAS,EAAEG,QAAQ,CAACC,EAAT,IAAe,SAAf,GAA2BC,SAAS,CAACC,aAArC,GAAqD,CAL5D;AAMJC,IAAAA,OAAO,EAAE;AANL,GADyB;AAS/BjB,EAAAA,KAAK,EAAE;AACLkB,IAAAA,MAAM,EAAE,EADH;AAELvB,IAAAA,KAAK,EAAE,MAFF;AAGLwB,IAAAA,aAAa,EAAE,EAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GATwB;AAe/BlB,EAAAA,GAAG,EAAE;AACHmB,IAAAA,eAAe,EAAE,SADd;AAEHT,IAAAA,UAAU,EAAE,QAFT;AAGHU,IAAAA,cAAc,EAAE,QAHb;AAIHC,IAAAA,YAAY,EAAE;AAJX,GAf0B;AAqB/BtB,EAAAA,KAAK,EAAE;AACLuB,IAAAA,KAAK,EAAE;AADF,GArBwB;AAwB/B1B,EAAAA,OAAO,EAAE;AACPH,IAAAA,KAAK,EAAE,MADA;AAEP8B,IAAAA,QAAQ,EAAE,EAFH;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPhB,IAAAA,SAAS,EAAE;AAJJ,GAxBsB;AA8B/BP,EAAAA,WAAW,EAAE;AACXO,IAAAA,SAAS,EAAE,EADA;AAEXiB,IAAAA,aAAa,EAAE,KAFJ;AAGXL,IAAAA,cAAc,EAAE,QAHL;AAIXV,IAAAA,UAAU,EAAE,QAJD;AAKXW,IAAAA,YAAY,EAAE,CALH;AAMXK,IAAAA,WAAW,EAAE,CANF;AAOXjC,IAAAA,KAAK,EAAE,GAPI;AAQXuB,IAAAA,MAAM,EAAE,EARG;AASXW,IAAAA,WAAW,EAAE,MATF;AAUXC,IAAAA,SAAS,EAAE,QAVA;AAWXC,IAAAA,WAAW,EAAE;AAXF,GA9BkB;AA2C/B3B,EAAAA,UAAU,EAAE;AACVqB,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,UAAU,EAAE;AAFF,GA3CmB;AA+C/BrB,EAAAA,GAAG,EAAE;AACHoB,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,UAAU,EAAE,QAFT;AAGHF,IAAAA,KAAK,EAAE;AAHJ;AA/C0B,CAAlB,CAAf;AAsDA,eAAexD,cAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Text, StyleSheet, View, Platform, StatusBar } from \"react-native\";\r\nimport AppButton from \"../compnents/AppButton\";\r\nimport AppInput from \"../compnents/AppInput\";\r\nimport Screen from \"../compnents/Screen\";\r\nimport AuthContext from \"../Auth/Context\";\r\nimport axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport Url from \"../Auth/ApiUrlEndpoints\";\r\n\r\nfunction RegisterScreen({ navigation }) {\r\n  const [username, setusername] = useState(\"\");\r\n  const [gmail, setGmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPass, setConfirmPass] = useState(\"\");\r\n  const [rdata, setData] = useState();\r\n  const authContext = useContext(AuthContext);\r\n  const reg = new FormData();\r\n  reg.append(\"email\", gmail);\r\n  reg.append(\"password\", password);\r\n  reg.append(\"username\", username);\r\n  const handleRegister = async () => {\r\n    const { data } = await axios\r\n      .post(Url + \"/auth/users/\", {\r\n        email: gmail,\r\n        username: username,\r\n        password: confirmPass,\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    if (data) {\r\n      const { data } = await axios\r\n        .post(Url + \"/user/create/\", {\r\n          username: username,\r\n          password: password,\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      if (data) {\r\n        const dat = jwtDecode(data.refresh);\r\n        authContext.setUser(dat);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Screen>\r\n      <View style={{ width: \"100%\", marginVertical: 20 }}>\r\n        <Text style={styles.h_style}>Register</Text>\r\n      </View>\r\n      <AppInput\r\n        placeholder=\"User Name\"\r\n        onChangeText={(text) => setusername(text)}\r\n        style={styles.input}\r\n        iconName=\"information\"\r\n      />\r\n      <AppInput\r\n        placeholder=\"Gmail\"\r\n        onChangeText={(text) => setGmail(text)}\r\n        style={styles.input}\r\n        iconName=\"gmail\"\r\n      />\r\n      <AppInput\r\n        placeholder=\"Password\"\r\n        onChangeText={(text) => setPassword(text)}\r\n        style={styles.input}\r\n        iconName=\"key-variant\"\r\n      />\r\n      <AppInput\r\n        placeholder=\"Confirm Password\"\r\n        onChangeText={(text) => setConfirmPass(text)}\r\n        style={styles.input}\r\n        iconName=\"key-star\"\r\n      />\r\n      <View style={{ width: \"99%\", marginVertical: 10 }}>\r\n        <AppButton\r\n          title=\"Next\"\r\n          textStyle={styles.btn_t}\r\n          height={50}\r\n          width={\"100%\"}\r\n          style={styles.btn}\r\n          onPress={handleRegister}\r\n        />\r\n      </View>\r\n      <View style={styles.option_view}>\r\n        <Text style={styles.option_txt}>Already have an account?.</Text>\r\n        <Text style={styles.txt} onPress={() => navigation.navigate(\"Login\")}>\r\n          Click To Log In\r\n        </Text>\r\n      </View>\r\n    </Screen>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  cont: {\r\n    marginTop: 20,\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    marginTop: Platform.OS == \"android\" ? StatusBar.currentHeight : 0,\r\n    padding: 10,\r\n  },\r\n  input: {\r\n    height: 50,\r\n    width: \"100%\",\r\n    paddingBottom: 20,\r\n    marginLeft: 10,\r\n  },\r\n  btn: {\r\n    backgroundColor: \"#4ecdc4\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 5,\r\n  },\r\n  btn_t: {\r\n    color: \"white\",\r\n  },\r\n  h_style: {\r\n    width: \"100%\",\r\n    fontSize: 30,\r\n    fontFamily: \"Roboto\",\r\n    marginTop: \"10%\",\r\n  },\r\n  option_view: {\r\n    marginTop: 50,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 1,\r\n    borderWidth: 2,\r\n    width: 350,\r\n    height: 70,\r\n    borderColor: \"gray\",\r\n    alignSelf: \"center\",\r\n    borderStyle: \"dashed\",\r\n  },\r\n  option_txt: {\r\n    fontSize: 15,\r\n    fontFamily: \"Roboto\",\r\n  },\r\n  txt: {\r\n    fontSize: 15,\r\n    fontFamily: \"Roboto\",\r\n    color: \"blue\",\r\n  },\r\n});\r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"module"}